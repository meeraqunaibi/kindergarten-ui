{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"-6\",\n    y: \"102\",\n    width: \"176\",\n    height: \"52\",\n    rx: \"8\",\n    transform: \"translate(210 46) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"86\",\n    y: \"102\",\n    width: \"176\",\n    height: \"52\",\n    rx: \"8\",\n    transform: \"translate(302 -46) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"-4\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(212 44) rotate(90)\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"84\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"-4\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(212 44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"84\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M120,48V208a16,16,0,0,1-16,16H64a16,16,0,0,1-16-16V48A16,16,0,0,1,64,32h40A16,16,0,0,1,120,48Zm72-16H152a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,192,32Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"-4\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(212 44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"84\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"-4\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(212 44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"84\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"-4\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(212 44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"84\",\n    y: \"100\",\n    width: \"176\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar Columns = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nColumns.displayName = \"Columns\";\nexport default Columns;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x","y","width","height","rx","transform","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","d","renderPath","weight","renderPathForWeight","Columns","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\Hala\\Desktop\\kindergarten\\node_modules\\phosphor-react\\src\\icons\\Columns.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"-6\"\n      y=\"102\"\n      width=\"176\"\n      height=\"52\"\n      rx=\"8\"\n      transform=\"translate(210 46) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"86\"\n      y=\"102\"\n      width=\"176\"\n      height=\"52\"\n      rx=\"8\"\n      transform=\"translate(302 -46) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect\n      x=\"-4\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(212 44) rotate(90)\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"84\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"-4\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(212 44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"84\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M120,48V208a16,16,0,0,1-16,16H64a16,16,0,0,1-16-16V48A16,16,0,0,1,64,32h40A16,16,0,0,1,120,48Zm72-16H152a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,192,32Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"-4\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(212 44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"84\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"-4\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(212 44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"84\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"-4\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(212 44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"84\"\n      y=\"100\"\n      width=\"176\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Columns = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nColumns.displayName = \"Columns\";\n\nexport default Columns;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from './index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nvar IconBase = /*#__PURE__*/forwardRef(function (props, ref) {\n  var alt = props.alt,\n    color = props.color,\n    size = props.size,\n    weight = props.weight,\n    mirrored = props.mirrored,\n    children = props.children,\n    renderPath = props.renderPath,\n    restProps = _objectWithoutPropertiesLoose(props, [\"alt\", \"color\", \"size\", \"weight\", \"mirrored\", \"children\", \"renderPath\"]);\n  var _useContext = useContext(IconContext),\n    _useContext$color = _useContext.color,\n    contextColor = _useContext$color === void 0 ? \"currentColor\" : _useContext$color,\n    contextSize = _useContext.size,\n    _useContext$weight = _useContext.weight,\n    contextWeight = _useContext$weight === void 0 ? \"regular\" : _useContext$weight,\n    _useContext$mirrored = _useContext.mirrored,\n    contextMirrored = _useContext$mirrored === void 0 ? false : _useContext$mirrored,\n    restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), !!alt && React.createElement(\"title\", null, alt), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPath(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nIconBase.displayName = \"IconBase\";\nexport default IconBase;","map":{"version":3,"mappings":";;;AAYA,IAAMA,QAAQ,gBAAGC,UAAU,CAA+B,UAACC,KAAD,EAAQC,GAAR;MAEtDC,MAQEF,MARFE;IACAC,QAOEH,MAPFG;IACAC,OAMEJ,MANFI;IACAC,SAKEL,MALFK;IACAC,WAIEN,MAJFM;IACAC,WAGEP,MAHFO;IACAC,aAEER,MAFFQ;IACGC,0CACDT;oBAQAU,UAAU,CAACC,WAAD;oCALZR;IAAOS,8CAAe;IAChBC,0BAANT;qCACAC;IAAQS,gDAAgB;uCACxBR;IAAUS,oDAAkB;IACzBC;EAGL,OACEC;IACEhB,GAAG,EAAEA;IACLiB,KAAK,EAAC;IACNC,KAAK,EAAEf,IAAF,WAAEA,IAAF,GAAUS;IACfO,MAAM,EAAEhB,IAAF,WAAEA,IAAF,GAAUS;IAChBQ,IAAI,EAAElB,KAAF,WAAEA,KAAF,GAAWS;IACfU,OAAO,EAAC;IACRC,SAAS,EAAEjB,QAAQ,IAAIS,eAAZ,GAA8B,cAA9B,GAA+CS;KACtDR,aACAP,UATN,EAWG,CAAC,CAACP,GAAF,IAASe,mCAAQf,GAAR,CAXZ,EAYGK,QAZH,EAaEU;IAAME,KAAK,EAAC;IAAMC,MAAM,EAAC;IAAMC,IAAI,EAAC;GAApC,CAbF,EAcGb,UAAU,CAACH,MAAD,WAACA,MAAD,GAAWS,aAAX,EAA0BX,KAA1B,WAA0BA,KAA1B,GAAmCS,YAAnC,CAdb,CADF;AAkBD,CAtC0B,CAA3B;AAwCAd,QAAQ,CAAC2B,WAAT,GAAuB,UAAvB","names":["IconBase","forwardRef","props","ref","alt","color","size","weight","mirrored","children","renderPath","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","React","xmlns","width","height","fill","viewBox","transform","undefined","displayName"],"sources":["C:\\Users\\Hala\\Desktop\\kindergarten\\Frontend\\node_modules\\phosphor-react\\src\\lib\\IconBase.tsx"],"sourcesContent":["import React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconWeight, IconContext } from \"../lib\";\n\nexport type RenderFunction = (\n  weight: IconWeight,\n  color: string\n) => React.ReactNode | null;\n\ninterface IconBaseProps extends IconProps {\n  renderPath: RenderFunction;\n}\n\nconst IconBase = forwardRef<SVGSVGElement, IconBaseProps>((props, ref) => {\n  const {\n    alt,\n    color,\n    size,\n    weight,\n    mirrored,\n    children,\n    renderPath,\n    ...restProps\n  } = props;\n\n  const {\n    color: contextColor = \"currentColor\",\n    size: contextSize,\n    weight: contextWeight = \"regular\",\n    mirrored: contextMirrored = false,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {!!alt && <title>{alt}</title>}\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPath(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nIconBase.displayName = \"IconBase\";\n\nexport default IconBase;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
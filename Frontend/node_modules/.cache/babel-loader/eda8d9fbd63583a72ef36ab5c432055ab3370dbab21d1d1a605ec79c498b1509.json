{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"100 108 100 61.1 40 72 40 108 100 108\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polygon\", {\n    points: \"216 108 216 40 140 53.8 140 108 216 108\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polygon\", {\n    points: \"100 148 100 194.9 40 184 40 148 100 148\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polygon\", {\n    points: \"216 148 216 216 140 202.2 140 148 216 148\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"216 216 136 201.5 136 201.5 136 144 216 144 216 216\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 195.6 40 184 40 144 104 144 104 195.6\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polygon\", {\n    points: \"216 40 136 54.5 136 54.5 136 112 216 112 216 40\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 60.4 40 72 40 112 104 112 104 60.4\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polygon\", {\n    points: \"216 216 136 201.5 136 201.5 136 144 216 144 216 216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 195.6 40 184 40 144 104 144 104 195.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"216 40 136 54.5 136 54.5 136 112 216 112 216 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 60.4 40 72 40 112 104 112 104 60.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M112,144v51.6a8.1,8.1,0,0,1-2.9,6.2,7.8,7.8,0,0,1-5.1,1.8h-1.4l-64-11.6A8,8,0,0,1,32,184V144a8,8,0,0,1,8-8h64A8,8,0,0,1,112,144Zm-2.9-89.8a8,8,0,0,0-6.5-1.7l-64,11.6A8,8,0,0,0,32,72v40a8,8,0,0,0,8,8h64a8,8,0,0,0,8-8V60.4A8.1,8.1,0,0,0,109.1,54.2ZM216,136H136a8,8,0,0,0-8,8v57.5a8,8,0,0,0,6.6,7.8l80,14.6H216a7.4,7.4,0,0,0,5.1-1.9A7.9,7.9,0,0,0,224,216V144A8,8,0,0,0,216,136Zm5.1-102.1a7.7,7.7,0,0,0-6.5-1.8l-80,14.6a8,8,0,0,0-6.6,7.8V112a8,8,0,0,0,8,8h80a8,8,0,0,0,8-8V40A7.9,7.9,0,0,0,221.1,33.9Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"216 216 136 201.5 136 201.5 136 144 216 144 216 216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 195.6 40 184 40 144 104 144 104 195.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polygon\", {\n    points: \"216 40 136 54.5 136 54.5 136 112 216 112 216 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 60.4 40 72 40 112 104 112 104 60.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"216 216 136 201.5 136 201.5 136 144 216 144 216 216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 195.6 40 184 40 144 104 144 104 195.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polygon\", {\n    points: \"216 40 136 54.5 136 54.5 136 112 216 112 216 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 60.4 40 72 40 112 104 112 104 60.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"216 216 136 201.5 136 201.5 136 144 216 144 216 216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 195.6 40 184 40 144 104 144 104 195.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"216 40 136 54.5 136 54.5 136 112 216 112 216 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"104 60.4 40 72 40 112 104 112 104 60.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar WindowsLogo = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nWindowsLogo.displayName = \"WindowsLogo\";\nexport default WindowsLogo;","map":{"version":3,"mappings":";;;;AAAA;AAWA,IAAMA,aAAa,gBAAG,IAAIC,GAAJ,EAAtB;AAEAD,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B,UAACC,KAAD;EAAA,OACxBC,0CACEA;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CADF,EASEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CATF,EAiBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAjBF,EAyBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAzBF,CADwB;AAAA,CAA1B;AAqCAV,aAAa,CAACE,GAAd,CAAkB,SAAlB,EAA6B,UAACC,KAAD;EAAA,OAC3BC,0CACEA;IACEC,MAAM,EAAC;IACPM,OAAO,EAAC;GAFV,CADF,EAKEP;IAASC,MAAM,EAAC;IAA4CM,OAAO,EAAC;GAApE,CALF,EAMEP;IACEC,MAAM,EAAC;IACPM,OAAO,EAAC;GAFV,CANF,EAUEP;IAASC,MAAM,EAAC;IAAyCM,OAAO,EAAC;GAAjE,CAVF,EAWEP;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAXF,EAmBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAnBF,EA2BEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CA3BF,EAmCEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAnCF,CAD2B;AAAA,CAA7B;AA+CAV,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B;EAAA,OACxBE,0CACEA;IAAMQ,CAAC,EAAC;GAAR,CADF,CADwB;AAAA,CAA1B;AAMAZ,aAAa,CAACE,GAAd,CAAkB,OAAlB,EAA2B,UAACC,KAAD;EAAA,OACzBC,0CACEA;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CADF,EASEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CATF,EAiBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAjBF,EAyBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAzBF,CADyB;AAAA,CAA3B;AAqCAV,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B,UAACC,KAAD;EAAA,OACxBC,0CACEA;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CADF,EASEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CATF,EAiBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAjBF,EAyBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAzBF,CADwB;AAAA,CAA1B;AAqCAV,aAAa,CAACE,GAAd,CAAkB,SAAlB,EAA6B,UAACC,KAAD;EAAA,OAC3BC,0CACEA;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CADF,EASEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CATF,EAiBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAjBF,EAyBEN;IACEC,MAAM,EAAC;IACPC,IAAI,EAAC;IACLC,MAAM,EAAEJ;IACRK,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAzBF,CAD2B;AAAA,CAA7B;AAqCA,IAAMG,UAAU,GAAmB,SAA7BA,UAA6B,CAACC,MAAD,EAAqBX,KAArB;EAAA,OACjCY,mBAAmB,CAACD,MAAD,EAASX,KAAT,EAAgBH,aAAhB,CADc;AAAA,CAAnC;AAGA,IAAMgB,WAAW,gBAAGC,UAAU,CAA2B,UAACC,KAAD,EAAQC,GAAR;EAAA,OACvDf,oBAACgB,QAAD;IAAUD,GAAG,EAAEA;KAASD;IAAOL,UAAU,EAAEA;IAA3C,CADuD;AAAA,CAA3B,CAA9B;AAIAG,WAAW,CAACK,WAAZ,GAA0B,aAA1B","names":["pathsByWeight","Map","set","color","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","d","renderPath","weight","renderPathForWeight","WindowsLogo","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\Hala\\Desktop\\kindergarten\\Frontend\\node_modules\\phosphor-react\\src\\icons\\WindowsLogo.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polygon\n      points=\"100 108 100 61.1 40 72 40 108 100 108\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polygon\n      points=\"216 108 216 40 140 53.8 140 108 216 108\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polygon\n      points=\"100 148 100 194.9 40 184 40 148 100 148\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polygon\n      points=\"216 148 216 216 140 202.2 140 148 216 148\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon\n      points=\"216 216 136 201.5 136 201.5 136 144 216 144 216 216\"\n      opacity=\"0.2\"\n    />\n    <polygon points=\"104 195.6 40 184 40 144 104 144 104 195.6\" opacity=\"0.2\" />\n    <polygon\n      points=\"216 40 136 54.5 136 54.5 136 112 216 112 216 40\"\n      opacity=\"0.2\"\n    />\n    <polygon points=\"104 60.4 40 72 40 112 104 112 104 60.4\" opacity=\"0.2\" />\n    <polygon\n      points=\"216 216 136 201.5 136 201.5 136 144 216 144 216 216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"104 195.6 40 184 40 144 104 144 104 195.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"216 40 136 54.5 136 54.5 136 112 216 112 216 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"104 60.4 40 72 40 112 104 112 104 60.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M112,144v51.6a8.1,8.1,0,0,1-2.9,6.2,7.8,7.8,0,0,1-5.1,1.8h-1.4l-64-11.6A8,8,0,0,1,32,184V144a8,8,0,0,1,8-8h64A8,8,0,0,1,112,144Zm-2.9-89.8a8,8,0,0,0-6.5-1.7l-64,11.6A8,8,0,0,0,32,72v40a8,8,0,0,0,8,8h64a8,8,0,0,0,8-8V60.4A8.1,8.1,0,0,0,109.1,54.2ZM216,136H136a8,8,0,0,0-8,8v57.5a8,8,0,0,0,6.6,7.8l80,14.6H216a7.4,7.4,0,0,0,5.1-1.9A7.9,7.9,0,0,0,224,216V144A8,8,0,0,0,216,136Zm5.1-102.1a7.7,7.7,0,0,0-6.5-1.8l-80,14.6a8,8,0,0,0-6.6,7.8V112a8,8,0,0,0,8,8h80a8,8,0,0,0,8-8V40A7.9,7.9,0,0,0,221.1,33.9Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polygon\n      points=\"216 216 136 201.5 136 201.5 136 144 216 144 216 216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polygon\n      points=\"104 195.6 40 184 40 144 104 144 104 195.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polygon\n      points=\"216 40 136 54.5 136 54.5 136 112 216 112 216 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polygon\n      points=\"104 60.4 40 72 40 112 104 112 104 60.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polygon\n      points=\"216 216 136 201.5 136 201.5 136 144 216 144 216 216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polygon\n      points=\"104 195.6 40 184 40 144 104 144 104 195.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polygon\n      points=\"216 40 136 54.5 136 54.5 136 112 216 112 216 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polygon\n      points=\"104 60.4 40 72 40 112 104 112 104 60.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polygon\n      points=\"216 216 136 201.5 136 201.5 136 144 216 144 216 216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"104 195.6 40 184 40 144 104 144 104 195.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"216 40 136 54.5 136 54.5 136 112 216 112 216 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"104 60.4 40 72 40 112 104 112 104 60.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst WindowsLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nWindowsLogo.displayName = \"WindowsLogo\";\n\nexport default WindowsLogo;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
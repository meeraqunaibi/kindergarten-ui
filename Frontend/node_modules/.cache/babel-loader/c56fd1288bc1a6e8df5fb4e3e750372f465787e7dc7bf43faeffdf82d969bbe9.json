{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"208 128 128 208 48 128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 48 128 128 48 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"208 48 128 128 48 48 208 48\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 128 128 208 48 128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"208 48 128 128 48 48 208 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M208,120H147.3l66.4-66.3a8.4,8.4,0,0,0,1.7-8.8A8,8,0,0,0,208,40H48a8,8,0,0,0-7.4,4.9,8.4,8.4,0,0,0,1.7,8.8L108.7,120H48a8,8,0,0,0-7.4,4.9,8.4,8.4,0,0,0,1.7,8.8l80,80a8.2,8.2,0,0,0,11.4,0l80-80a8.4,8.4,0,0,0,1.7-8.8A8,8,0,0,0,208,120Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"208 128 128 208 48 128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 48 128 128 48 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"208 128 128 208 48 128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 48 128 128 48 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"208 128 128 208 48 128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 48 128 128 48 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar CaretDoubleDown = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nCaretDoubleDown.displayName = \"CaretDoubleDown\";\nexport default CaretDoubleDown;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","d","renderPath","weight","renderPathForWeight","CaretDoubleDown","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\Hala\\Desktop\\kindergarten\\Frontend\\node_modules\\phosphor-react\\src\\icons\\CaretDoubleDown.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"208 128 128 208 48 128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"208 48 128 128 48 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"208 48 128 128 48 48 208 48\" opacity=\"0.2\" />\n    <polyline\n      points=\"208 128 128 208 48 128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"208 48 128 128 48 48 208 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M208,120H147.3l66.4-66.3a8.4,8.4,0,0,0,1.7-8.8A8,8,0,0,0,208,40H48a8,8,0,0,0-7.4,4.9,8.4,8.4,0,0,0,1.7,8.8L108.7,120H48a8,8,0,0,0-7.4,4.9,8.4,8.4,0,0,0,1.7,8.8l80,80a8.2,8.2,0,0,0,11.4,0l80-80a8.4,8.4,0,0,0,1.7-8.8A8,8,0,0,0,208,120Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"208 128 128 208 48 128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"208 48 128 128 48 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"208 128 128 208 48 128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"208 48 128 128 48 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"208 128 128 208 48 128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"208 48 128 128 48 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretDoubleDown = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretDoubleDown.displayName = \"CaretDoubleDown\";\n\nexport default CaretDoubleDown;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
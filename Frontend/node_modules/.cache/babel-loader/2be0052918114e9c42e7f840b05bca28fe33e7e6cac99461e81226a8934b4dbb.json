{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"48\",\n    width: \"60\",\n    height: \"60\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"148\",\n    width: \"60\",\n    height: \"60\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"148\",\n    y: \"48\",\n    width: \"60\",\n    height: \"60\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"148\",\n    x2: \"148\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"148 208 184 208 184 148\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"184\",\n    y1: \"164\",\n    x2: \"208\",\n    y2: \"164\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"144\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"144\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"144\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"144\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"144\",\n    y1: \"144\",\n    x2: \"144\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 208 176 208 176 144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"208\",\n    y1: \"192\",\n    x2: \"208\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"80\",\n    height: \"80\",\n    rx: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"136\",\n    width: \"80\",\n    height: \"80\",\n    rx: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"136\",\n    y: \"40\",\n    width: \"80\",\n    height: \"80\",\n    rx: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M144,184a8,8,0,0,0,8-8V144a8,8,0,0,0-16,0v32A8,8,0,0,0,144,184Z\"\n  }), React.createElement(\"path\", {\n    d: \"M208,152H184v-8a8,8,0,0,0-16,0v56H144a8,8,0,0,0,0,16h32a8,8,0,0,0,8-8V168h24a8,8,0,0,0,0-16Z\"\n  }), React.createElement(\"path\", {\n    d: \"M208,184a8,8,0,0,0-8,8v16a8,8,0,0,0,16,0V192A8,8,0,0,0,208,184Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"144\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"144\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"144\",\n    y1: \"144\",\n    x2: \"144\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 208 176 208 176 144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"208\",\n    y1: \"192\",\n    x2: \"208\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"144\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"144\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"144\",\n    y1: \"144\",\n    x2: \"144\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 208 176 208 176 144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"208\",\n    y1: \"192\",\n    x2: \"208\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"48\",\n    y: \"144\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"144\",\n    y: \"48\",\n    width: \"64\",\n    height: \"64\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"144\",\n    y1: \"144\",\n    x2: \"144\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 208 176 208 176 144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"208\",\n    y1: \"192\",\n    x2: \"208\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar QrCode = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nQrCode.displayName = \"QrCode\";\nexport default QrCode;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x","y","width","height","rx","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","points","opacity","d","renderPath","weight","renderPathForWeight","QrCode","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\Hala\\Desktop\\kindergarten\\node_modules\\phosphor-react\\src\\icons\\QrCode.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"48\"\n      y=\"48\"\n      width=\"60\"\n      height=\"60\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"48\"\n      y=\"148\"\n      width=\"60\"\n      height=\"60\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"148\"\n      y=\"48\"\n      width=\"60\"\n      height=\"60\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"148\"\n      y1=\"148\"\n      x2=\"148\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"148 208 184 208 184 148\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"184\"\n      y1=\"164\"\n      x2=\"208\"\n      y2=\"164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect x=\"48\" y=\"48\" width=\"64\" height=\"64\" rx=\"8\" opacity=\"0.2\" />\n    <rect x=\"48\" y=\"144\" width=\"64\" height=\"64\" rx=\"8\" opacity=\"0.2\" />\n    <rect x=\"144\" y=\"48\" width=\"64\" height=\"64\" rx=\"8\" opacity=\"0.2\" />\n    <rect\n      x=\"48\"\n      y=\"48\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"48\"\n      y=\"144\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"144\"\n      y=\"48\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"144\"\n      y1=\"144\"\n      x2=\"144\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"144 208 176 208 176 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"208\"\n      y1=\"192\"\n      x2=\"208\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <rect x=\"40\" y=\"40\" width=\"80\" height=\"80\" rx=\"16\" />\n    <rect x=\"40\" y=\"136\" width=\"80\" height=\"80\" rx=\"16\" />\n    <rect x=\"136\" y=\"40\" width=\"80\" height=\"80\" rx=\"16\" />\n    <path d=\"M144,184a8,8,0,0,0,8-8V144a8,8,0,0,0-16,0v32A8,8,0,0,0,144,184Z\" />\n    <path d=\"M208,152H184v-8a8,8,0,0,0-16,0v56H144a8,8,0,0,0,0,16h32a8,8,0,0,0,8-8V168h24a8,8,0,0,0,0-16Z\" />\n    <path d=\"M208,184a8,8,0,0,0-8,8v16a8,8,0,0,0,16,0V192A8,8,0,0,0,208,184Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"48\"\n      y=\"48\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"48\"\n      y=\"144\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"144\"\n      y=\"48\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"144\"\n      y1=\"144\"\n      x2=\"144\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"144 208 176 208 176 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"208\"\n      y1=\"192\"\n      x2=\"208\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"48\"\n      y=\"48\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"48\"\n      y=\"144\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"144\"\n      y=\"48\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"144\"\n      y1=\"144\"\n      x2=\"144\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"144 208 176 208 176 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"208\"\n      y1=\"192\"\n      x2=\"208\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"48\"\n      y=\"48\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"48\"\n      y=\"144\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"144\"\n      y=\"48\"\n      width=\"64\"\n      height=\"64\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"144\"\n      y1=\"144\"\n      x2=\"144\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"144 208 176 208 176 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"208\"\n      y1=\"192\"\n      x2=\"208\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst QrCode = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nQrCode.displayName = \"QrCode\";\n\nexport default QrCode;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
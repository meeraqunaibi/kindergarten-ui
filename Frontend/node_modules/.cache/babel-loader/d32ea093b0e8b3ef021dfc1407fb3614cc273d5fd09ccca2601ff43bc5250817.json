{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"160\",\n    y1: \"96\",\n    x2: \"208\",\n    y2: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"160\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M64,68V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V188\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"68 104 80 152 96 116 112 152 124 104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"68\",\n    width: \"128\",\n    height: \"120\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"72\",\n    width: \"120\",\n    height: \"112\",\n    rx: \"8\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"152\",\n    y1: \"96\",\n    x2: \"208\",\n    y2: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"152\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"64 104 76 152 92 116 108 152 120 104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"72\",\n    width: \"120\",\n    height: \"112\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M200,24H72A16,16,0,0,0,56,40V64H40A16,16,0,0,0,24,80v96a16,16,0,0,0,16,16H56v24a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM68.2,153.9l-12-48a8,8,0,0,1,15.6-3.8l6.3,25.4,6.6-14.7a8,8,0,0,1,14.6,0l6.6,14.7,6.3-25.4a8,8,0,1,1,15.6,3.8l-12,48a8.1,8.1,0,0,1-7.1,6.1H108a7.9,7.9,0,0,1-7.3-4.8L92,135.7l-8.7,19.5a8,8,0,0,1-8,4.8A8.1,8.1,0,0,1,68.2,153.9ZM200,216H72V192h72a16,16,0,0,0,16-16v-8h40Zm0-64H160V104h40Zm0-64H160V80a16,16,0,0,0-16-16H72V40H200Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"152\",\n    y1: \"96\",\n    x2: \"208\",\n    y2: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"152\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"64 104 76 152 92 116 108 152 120 104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"72\",\n    width: \"120\",\n    height: \"112\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"152\",\n    y1: \"96\",\n    x2: \"208\",\n    y2: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"152\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"64 104 76 152 92 116 108 152 120 104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"72\",\n    width: \"120\",\n    height: \"112\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"152\",\n    y1: \"96\",\n    x2: \"208\",\n    y2: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"152\",\n    y1: \"160\",\n    x2: \"208\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"64 104 76 152 92 116 108 152 120 104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"72\",\n    width: \"120\",\n    height: \"112\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar MicrosoftWordLogo = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nMicrosoftWordLogo.displayName = \"MicrosoftWordLogo\";\nexport default MicrosoftWordLogo;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","points","x","y","width","height","rx","opacity","renderPath","weight","renderPathForWeight","MicrosoftWordLogo","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\Hala\\Desktop\\kindergarten\\node_modules\\phosphor-react\\src\\icons\\MicrosoftWordLogo.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"160\"\n      y1=\"96\"\n      x2=\"208\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M64,68V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V188\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"68 104 80 152 96 116 112 152 124 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"32\"\n      y=\"68\"\n      width=\"128\"\n      height=\"120\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect x=\"32\" y=\"72\" width=\"120\" height=\"112\" rx=\"8\" opacity=\"0.2\" />\n    <line\n      x1=\"152\"\n      y1=\"96\"\n      x2=\"208\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"152\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"64 104 76 152 92 116 108 152 120 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"32\"\n      y=\"72\"\n      width=\"120\"\n      height=\"112\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M200,24H72A16,16,0,0,0,56,40V64H40A16,16,0,0,0,24,80v96a16,16,0,0,0,16,16H56v24a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM68.2,153.9l-12-48a8,8,0,0,1,15.6-3.8l6.3,25.4,6.6-14.7a8,8,0,0,1,14.6,0l6.6,14.7,6.3-25.4a8,8,0,1,1,15.6,3.8l-12,48a8.1,8.1,0,0,1-7.1,6.1H108a7.9,7.9,0,0,1-7.3-4.8L92,135.7l-8.7,19.5a8,8,0,0,1-8,4.8A8.1,8.1,0,0,1,68.2,153.9ZM200,216H72V192h72a16,16,0,0,0,16-16v-8h40Zm0-64H160V104h40Zm0-64H160V80a16,16,0,0,0-16-16H72V40H200Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"152\"\n      y1=\"96\"\n      x2=\"208\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"152\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"64 104 76 152 92 116 108 152 120 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"32\"\n      y=\"72\"\n      width=\"120\"\n      height=\"112\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"152\"\n      y1=\"96\"\n      x2=\"208\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"152\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"64 104 76 152 92 116 108 152 120 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"32\"\n      y=\"72\"\n      width=\"120\"\n      height=\"112\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"152\"\n      y1=\"96\"\n      x2=\"208\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"152\"\n      y1=\"160\"\n      x2=\"208\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"64 104 76 152 92 116 108 152 120 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"32\"\n      y=\"72\"\n      width=\"120\"\n      height=\"112\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst MicrosoftWordLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nMicrosoftWordLogo.displayName = \"MicrosoftWordLogo\";\n\nexport default MicrosoftWordLogo;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
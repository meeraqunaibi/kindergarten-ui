{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"24\",\n    y: \"64\",\n    width: \"208\",\n    height: \"128\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"68\",\n    r: \"16\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"24\",\n    y: \"64\",\n    width: \"208\",\n    height: \"128\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"24\",\n    y: \"64\",\n    width: \"208\",\n    height: \"128\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"12\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M176,16H80A24.1,24.1,0,0,0,56,40V216a24.1,24.1,0,0,0,24,24h96a24.1,24.1,0,0,0,24-24V40A24.1,24.1,0,0,0,176,16ZM128,72a12,12,0,1,1,12-12A12,12,0,0,1,128,72Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"24\",\n    y: \"64\",\n    width: \"208\",\n    height: \"128\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"10\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"24\",\n    y: \"64\",\n    width: \"208\",\n    height: \"128\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"24\",\n    y: \"64\",\n    width: \"208\",\n    height: \"128\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"12\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar DeviceMobileCamera = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nDeviceMobileCamera.displayName = \"DeviceMobileCamera\";\nexport default DeviceMobileCamera;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x","y","width","height","rx","transform","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","opacity","d","renderPath","weight","renderPathForWeight","DeviceMobileCamera","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\Hala\\Desktop\\kindergarten\\Frontend\\node_modules\\phosphor-react\\src\\icons\\DeviceMobileCamera.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"24\"\n      y=\"64\"\n      width=\"208\"\n      height=\"128\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"128\" cy=\"68\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect\n      x=\"24\"\n      y=\"64\"\n      width=\"208\"\n      height=\"128\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"24\"\n      y=\"64\"\n      width=\"208\"\n      height=\"128\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"128\" cy=\"60\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M176,16H80A24.1,24.1,0,0,0,56,40V216a24.1,24.1,0,0,0,24,24h96a24.1,24.1,0,0,0,24-24V40A24.1,24.1,0,0,0,176,16ZM128,72a12,12,0,1,1,12-12A12,12,0,0,1,128,72Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"24\"\n      y=\"64\"\n      width=\"208\"\n      height=\"128\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"128\" cy=\"60\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"24\"\n      y=\"64\"\n      width=\"208\"\n      height=\"128\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"128\" cy=\"60\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"24\"\n      y=\"64\"\n      width=\"208\"\n      height=\"128\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"128\" cy=\"60\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst DeviceMobileCamera = forwardRef<SVGSVGElement, IconProps>(\n  (props, ref) => <IconBase ref={ref} {...props} renderPath={renderPath} />\n);\n\nDeviceMobileCamera.displayName = \"DeviceMobileCamera\";\n\nexport default DeviceMobileCamera;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}